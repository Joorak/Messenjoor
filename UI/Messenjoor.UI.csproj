<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <ServiceWorkerAssetsManifest>service-worker-assets.js</ServiceWorkerAssetsManifest>
	<EnableDefaultContentItems>true</EnableDefaultContentItems>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="BlazorPro.BlazorSize" Version="6.2.2" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="8.0.4" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="8.0.4" PrivateAssets="all" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR.Client" Version="8.0.4" />
    <PackageReference Include="Microsoft.Extensions.Http" Version="8.0.0" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Shared\Messenjoor.Shared.csproj" />
  </ItemGroup>
	<Target Name="CopyCustomContent" AfterTargets="AfterBuild">
		<ItemGroup>
			<!-- Because this ItemGroup is inside the target, this will enumerate
                 all files just before calling Copy. If the ItemGroup were outside
                 the target , it would enumerate the files during evaluation, before
                 the build starts, which may miss files created during the build. -->
			<MySourceFiles Include="wwwroot\**\*.*"/>
		</ItemGroup>
		<Copy SourceFiles="@(MySourceFiles)"  DestinationFolder="$(OutDir)\%(RecursiveDir)"  />
	</Target>
  <!--<ItemGroup>
    <ServiceWorker Include="wwwroot\service-worker.js" PublishedContent="wwwroot\service-worker.published.js" />
  </ItemGroup>-->
  <!--<ItemGroup>
    <Content Update="wwwroot\index.html">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="wwwroot\js\pushNotifications.js">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>-->
</Project>